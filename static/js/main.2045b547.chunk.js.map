{"version":3,"sources":["containers/ColorForm/ColorForm.js","components/ColorBox/ColorBox.js","components/ColorCont/ColorCont.js","containers/App/App.js","index.js"],"names":["ColorForm","handleChange","e","setState","target","name","value","submitColor","preventDefault","selectColor","props","state","color","resetInputs","className","type","placeholder","this","title","onChange","onClick","Component","ColorBox","style","backgroundColor","ColorCont","colorDisplay","colors","map","index","key","tinycolor","require","App","generatedColors","tetrad","t","toHexString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAGqBA,G,wDACjB,aAAe,IAAD,8BACV,gBAIJC,aAAe,SAAAC,GACX,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,SANhC,EASdC,YAAc,SAAAL,GACVA,EAAEM,kBAEFC,EADwB,EAAKC,MAArBD,aACI,EAAKE,MAAMC,OACvB,EAAKC,eAbK,EAgBdA,YAAc,WACV,EAAKV,SAAS,CAACS,MAAO,MAftB,EAAKD,MAAQ,CAAEC,MAAO,IAFZ,E,qDAqBV,OACI,0BAAME,UAAU,aACZ,oDACA,2BACIC,KAAK,OACLC,YAAY,QACZV,MAAOW,KAAKN,MAAMO,MAClBb,KAAK,QACLc,SAAUF,KAAKhB,eAEnB,4BAAQmB,QAASH,KAAKV,aAAtB,e,GAhCuBc,cCUxBC,G,YAVE,SAAC,GAAa,IAAZV,EAAW,EAAXA,MACf,OACI,6BAASE,UAAU,cACf,yBAAKS,MAAO,CAAEC,gBAAgB,GAAD,OAAKZ,IAC9BE,UAAU,wBCSXW,EAZG,SAAC,GAAc,IACvBC,EADsB,EAAZC,OACYC,KAAI,SAAChB,EAAOiB,GACpC,OAAO,kBAAC,EAAD,CAAUC,IAAKD,EAAOjB,MAAOA,OAGxC,OACI,6BAASE,UAAU,aACdY,ICPPK,EAAYC,EAAQ,IAELC,E,kDACnB,aAAe,IAAD,8BACZ,gBAIFxB,YAAc,SAAAG,GAEZ,IAEMsB,EADaH,EADG,IAAMnB,GACgBuB,SACTP,KAAI,SAAUQ,GAAK,OAAOA,EAAEC,iBAC/D,EAAKlC,SAAS,CAAEwB,OAAO,YAAKO,MAR5B,EAAKvB,MAAQ,CAAEgB,OAAQ,CAAC,UAAW,UAAW,UAAW,YAF7C,E,qDAcZ,OACE,6BAASb,UAAU,OACjB,kBAAC,EAAD,CAAWL,YAAaQ,KAAKR,cAC7B,kBAAC,EAAD,CAAWkB,OAAQV,KAAKN,MAAMgB,c,GAlBLN,aCFjCiB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2045b547.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './ColorForm.scss';\n\nexport default class ColorForm extends Component {\n    constructor() {\n        super()\n        this.state = { color: '' }\n    }\n\n    handleChange = e => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    submitColor = e => {\n        e.preventDefault();\n        const { selectColor } = this.props;\n        selectColor(this.state.color);\n        this.resetInputs();\n    }\n\n    resetInputs = () => {\n        this.setState({color: ''})\n    }\n\n    render() {\n        return (\n            <form className='colorForm'>\n                <h1>Please Enter A Color</h1>\n                <input\n                    type='text'\n                    placeholder='color'\n                    value={this.state.title}\n                    name='color'\n                    onChange={this.handleChange}\n                />\n                <button onClick={this.submitColor}>Submit</button>\n            </form>\n        )\n    }\n}","import React from 'react';\nimport \"./ColorBox.scss\";\n\nconst ColorBox = ({color}) => {\n    return (\n        <section className='color-cont'>\n            <div style={{ backgroundColor: `${color}` }}\n                className='color-cont-inner'\n            ></div>\n        </section>\n    )\n}\n\nexport default ColorBox;","import React from 'react';\nimport \"./ColorCont.scss\";\nimport ColorBox from '../ColorBox/ColorBox';\n\nconst ColorCont = ({colors}) => {\n    const colorDisplay = colors.map((color, index) => {\n        return <ColorBox key={index} color={color} />\n    })\n\n    return (\n        <section className=\"ColorDisp\">\n            {colorDisplay}\n        </section>\n    )\n}\n\nexport default ColorCont;","import React, { Component } from 'react';\nimport './App.scss';\nimport ColorForm from '../ColorForm/ColorForm';\nimport ColorCont from '../../components/ColorCont/ColorCont';\nconst tinycolor = require(\"tinycolor2\");\n\nexport default class App extends Component {\n  constructor() {\n    super()\n    this.state = { colors: ['#E0E5EC', '#E0E5EC', '#E0E5EC', '#E0E5EC'] }\n  }\n\n  selectColor = color => {\n    //add normalization for a variety of color inputs\n    const selectedColor = '#' + color;\n    const colorParse = tinycolor(selectedColor).tetrad();\n    const generatedColors = colorParse.map(function (t) { return t.toHexString(); });\n    this.setState({ colors: [...generatedColors]});\n  }\n\n  render() {\n    return (\n      <section className=\"App\">\n        <ColorForm selectColor={this.selectColor}/>\n        <ColorCont colors={this.state.colors}/>\n      </section>\n    )\n  };\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}